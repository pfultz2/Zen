/*=============================================================================
    Copyright (c) 2012 Paul Fultz II
    perfect_facade.h
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#define ZEN_PERFECT_FACADE(Function, f) \
    typedef Function zen_private_perfect_facade_function_type; Function zen_private_perfect_facade_function() const { return f; } template< class T0 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & )>::type operator()( T0 & x0 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) ); } template< class T0 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & )>::type operator()( const T0 & x0 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) ); } template< class T0 , class T1 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & )>::type operator()( T0 & x0 , T1 & x1 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) ); } template< class T0 , class T1 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & )>::type operator()( const T0 & x0 , T1 & x1 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) ); } template< class T0 , class T1 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & )>::type operator()( T0 & x0 , const T1 & x1 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) ); } template< class T0 , class T1 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & )>::type operator()( const T0 & x0 , const T1 & x1 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) ); } template< class T0 , class T1 , class T2 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward< T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward< T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward< T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward< T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward< T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward< T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward< T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward< T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward< T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward< T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward< T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); } template< class T0 , class T1 , class T2 , class T3 , class T4 , class T5 , class T6 , class T7 , class T8 , class T9 , class T10 > typename zen::result_of<zen_private_perfect_facade_function_type( const T0 & , const T1 & , const T2 & , const T3 & , const T4 & , const T5 & , const T6 & , const T7 & , const T8 & , const T9 & , const T10 & )>::type operator()( const T0 & x0 , const T1 & x1 , const T2 & x2 , const T3 & x3 , const T4 & x4 , const T5 & x5 , const T6 & x6 , const T7 & x7 , const T8 & x8 , const T9 & x9 , const T10 & x10 ) const { return this->zen_private_perfect_facade_function()( zen::forward<const T0>( x0 ) , zen::forward<const T1>( x1 ) , zen::forward<const T2>( x2 ) , zen::forward<const T3>( x3 ) , zen::forward<const T4>( x4 ) , zen::forward<const T5>( x5 ) , zen::forward<const T6>( x6 ) , zen::forward<const T7>( x7 ) , zen::forward<const T8>( x8 ) , zen::forward<const T9>( x9 ) , zen::forward<const T10>( x10 ) ); }
